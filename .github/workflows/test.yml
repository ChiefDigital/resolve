name: Test CI/CD

on:
  push:
    branches: [feature/scoped-packages]
  pull_request:
    branches: [feature/scoped-packages]

jobs:
  cloud-deploy:
    runs-on: ubuntu-latest
    continue-on-error: true

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Install & Build
        run: |
          echo "installing packages and building the repository"
          yarn

      - id: publish
        name: Publish to private repository
        uses: reimagined/github-actions/publish@v1
        with:
          registry: github
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          version: auto
          build: ${{ github.sha }}
          tag: latest-dev
          unpublish: false

      - name: Checkout resolve-cloud
        uses: actions/checkout@v2
        with:
          repository: DevExpress/resolve-cloud2
          ref: 'feature/scoped-packages'
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          path: resolve-cloud

      - id: cloud
        name: Install cloud environment
        uses: reimagined/github-actions/install-cloud@v1
        with:
          aws_access_key_id: ${{ secrets.TEST_CLOUD_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.TEST_CLOUD_AWS_SECRET_ACCESS_KEY }}
          stage: dev
          version: ${{ steps.publish.outputs.version }}
          source: ./resolve-cloud
          registry: ${{ steps.publish.outputs.registry_url }}
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          scopes: '@reimagined'

      - name: Prepare test application
        run: |
          test_app_dir=$(mktemp -d -t test-app-XXXXXXXXX)
          echo "test_app_dir=${test_app_dir}" >> $GITHUB_ENV
          cp -rf ./functional-tests/app/. ${test_app_dir}
          cd ${test_app_dir}
          rm -rf node_modules

      - id: deploy
        name: Deploy test app to the cloud
        uses: reimagined/github-actions/deploy@v1
        with:
          source: ${{ env.test_app_dir }}
          cloud_api_url: ${{ steps.cloud.outputs.api_url}}
          cloud_user: ${{ secrets.RESOLVE_CLOUD_USER }}
          cloud_token: ${{ secrets.RESOLVE_CLOUD_TOKEN }}
          cli_sources: resolve-cloud/cli/resolve-cloud
          framework_version: ${{ steps.publish.outputs.version }}
          randomize_name: true
          package_registry: ${{ steps.publish.outputs.registry_url }}
          package_registry_token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}
          package_registry_scopes: '@reimagined'
          deploy_args: --verbosity=debug

      - name: API tests
        run: |
          cd functional-tests
          yarn run-test api --url=${{ steps.deploy.outputs.url }}

      - name: Testcafe tests
        run: |
          cd functional-tests
          yarn run-test testcafe --url=${{ steps.deploy.outputs.url }} --testcafe-browser=chrome --ci-mode --testcafe-timeout=10000
